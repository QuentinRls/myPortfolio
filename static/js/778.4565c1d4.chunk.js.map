{"version":3,"file":"static/js/778.4565c1d4.chunk.js","mappings":"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","sources":["ressources/projectRessources.js","styling/loader.js","components/LegalRAG.js","components/Agent.js","components/Form.js","sections/project.js"],"sourcesContent":["const boxShadowSetter = (width) => {\r\n    const initialShadows = width <= 1080 ?  \r\n    [`rgb(91 75 210 / 40%) 0px 5px, \r\n  rgb(75 140 210 / 30%) 0px 10px, \r\n  rgb(75 203 210 / 20%) 0px 15px, \r\n  rgb(75 203 210 / 10%) 0px 20px, \r\n  rgb(75 210 186 / 5%) 0px 25px`,\r\n      `rgb(91 75 210 / 40%) 0px 5px, \r\n  rgb(75 140 210 / 30%) 0px 10px, \r\n  rgb(75 203 210 / 20%) 0px 15px, \r\n  rgb(75 203 210 / 10%) 0px 20px, \r\n  rgb(75 210 186 / 5%) 0px 25px`,\r\n      `rgb(91 75 210 / 40%) 0px 5px, \r\n  rgb(75 140 210 / 30%) 0px 10px, \r\n  rgb(75 203 210 / 20%) 0px 15px, \r\n  rgb(75 203 210 / 10%) 0px 20px, \r\n  rgb(75 210 186 / 5%) 0px 25px`]\r\n  :\r\n  [\r\n    `rgb(91 75 210 / 40%) -5px 5px, \r\n  rgb(75 140 210 / 30%) -10px 10px, \r\n  rgb(75 203 210 / 20%) -15px 15px, \r\n  rgb(75 203 210 / 10%) -20px 20px, \r\n  rgb(75 210 186 / 5%) -25px 25px`,\r\n    `rgb(91 75 210 / 40%) 0px 5px, \r\n  rgb(75 140 210 / 30%) 0px 10px, \r\n  rgb(75 203 210 / 20%) 0px 15px, \r\n  rgb(75 203 210 / 10%) 0px 20px, \r\n  rgb(75 210 186 / 5%) 0px 25px`,\r\n    `rgb(91 75 210 / 40%) 5px 5px, \r\n  rgb(75 140 210 / 30%) 10px 10px, \r\n  rgb(75 203 210 / 20%) 15px 15px, \r\n  rgb(75 203 210 / 10%) 20px 20px, \r\n  rgb(75 210 186 / 5%) 25px 25px`\r\n  ];\r\n  return initialShadows;\r\n}\r\n\r\nexport default boxShadowSetter;","import React from \"react\";\r\nimport \"../style/loader.css\";\r\n\r\nconst Loader = () => {\r\n  const dots = Array.from({ length: 26 });\r\n\r\n  return (\r\n    <div className=\"loader\">\r\n      {dots.map((_, index) => (\r\n        <div key={index} className=\"dot\"></div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./LegalRAG.css\";\r\nimport Loader from \"../styling/loader\";\r\n\r\nfunction LegalRAG({ onClear }) {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [loading, setLoading] = useState(false); // Ã‰tat pour le chargement\r\n\r\n  const handleSearch = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!question) {\r\n      alert(\"Veuillez entrer une question ou une recherche.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"https://mywebsiteserver-s92a.onrender.com/legal-query\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          question,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setAnswer(data.answer);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'envoi de la requÃªte :\", error);\r\n      setAnswer(\"Une erreur est survenue. Veuillez rÃ©essayer.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (onClear) {\r\n      onClear(() => setAnswer(\"\")); // RÃ©initialise le contenu lorsqu'onReturn est dÃ©clenchÃ©\r\n    }\r\n  }, [onClear]);\r\n\r\n  const formatAnswer = (text) => {\r\n    const lines = text.split(\"\\n\");\r\n    return lines.map((line, index) => {\r\n      const parts = line.split(/(\\*\\*.*?\\*\\*|#.*?#)/);\r\n      return (\r\n        <p key={index} className=\"legal-paragraph\">\r\n          {parts.map((part, idx) => {\r\n            if (part.startsWith(\"**\") && part.endsWith(\"**\")) {\r\n              const title = part.slice(2, -2).trim();\r\n              return (\r\n                <h2 key={idx} className=\"legal-title\">\r\n                  {title}\r\n                </h2>\r\n              );\r\n            } else if (part.startsWith(\"#\") && part.endsWith(\"#\")) {\r\n              const boldText = part.slice(1, -1).trim();\r\n              return (\r\n                <strong key={idx} className=\"legal-bold\">\r\n                  {boldText}\r\n                </strong>\r\n              );\r\n            }\r\n            return part;\r\n          })}\r\n        </p>\r\n      );\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>Assistant Juridique par IA</h1>\r\n      <form onSubmit={handleSearch} className=\"form\">\r\n        <label htmlFor=\"questionInput\" className=\"form-label\">\r\n          Posez votre question :\r\n        </label>\r\n        <input\r\n          id=\"questionInput\"\r\n          type=\"text\"\r\n          placeholder=\"Ex : Quelle est la diffÃ©rence entre homicide et meurtre ?\"\r\n          value={question}\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"analyze-btn\" disabled={loading}>\r\n          {loading ? <Loader/> : \"Rechercher\"}\r\n        </button>\r\n      </form>\r\n      {answer && (\r\n        <div className=\"legal-rag-result\">\r\n          <h2>RÃ©sultat :</h2>\r\n          {formatAnswer(answer)}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LegalRAG;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./LegalRAG.css\";\r\nimport Loader from \"../styling/loader\";\r\n\r\nfunction Test({ onClear }) {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [loading, setLoading] = useState(false); // Ã‰tat pour le chargement\r\n\r\n  const handleSearch = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!question) {\r\n      alert(\"Veuillez entrer une question ou une recherche.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // DÃ©marrer le chargement\r\n\r\n    try {\r\n      const response = await fetch(\"https://mywebsiteserver-s92a.onrender.com/test-query\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          question,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setAnswer(data.answer);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'envoi de la requÃªte :\", error);\r\n      setAnswer(\"Une erreur est survenue. Veuillez rÃ©essayer.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (onClear) {\r\n      onClear(() => setAnswer(\"\")); // RÃ©initialise le contenu lorsqu'onReturn est dÃ©clenchÃ©\r\n    }\r\n  }, [onClear]);\r\n\r\n  const formatAnswer = (text) => {\r\n    const lines = text.split(\"\\n\");\r\n    return lines.map((line, index) => {\r\n      const parts = line.split(/(\\*\\*.*?\\*\\*|#.*?#)/);\r\n      return (\r\n        <p key={index} className=\"legal-paragraph\">\r\n          {parts.map((part, idx) => {\r\n            if (part.startsWith(\"**\") && part.endsWith(\"**\")) {\r\n              const title = part.slice(2, -2).trim();\r\n              return (\r\n                <h2 key={idx} className=\"legal-title\">\r\n                  {title}\r\n                </h2>\r\n              );\r\n            } else if (part.startsWith(\"#\") && part.endsWith(\"#\")) {\r\n              const boldText = part.slice(1, -1).trim();\r\n              return (\r\n                <strong key={idx} className=\"legal-bold\">\r\n                  {boldText}\r\n                </strong>\r\n              );\r\n            }\r\n            return part;\r\n          })}\r\n        </p>\r\n      );\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>GÃ©nÃ©rateur de prompt</h1>\r\n      <form onSubmit={handleSearch} className=\"form\">\r\n        <label htmlFor=\"questionInput\" className=\"form-label\">\r\n          Posez votre question :\r\n        </label>\r\n        <input\r\n          id=\"questionInput\"\r\n          type=\"text\"\r\n          placeholder=\"Ex : Quelle est la diffÃ©rence entre homicide et meurtre ?\"\r\n          value={question}\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"analyze-btn\" disabled={loading}>\r\n          {loading ? <Loader/> : \"Rechercher\"}\r\n        </button>\r\n      </form>\r\n      {answer && (\r\n        <div className=\"legal-rag-result\">\r\n          <h2>RÃ©sultat :</h2>\r\n          {formatAnswer(answer)}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","import React, { useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Loader from \"../styling/loader\";\r\n\r\nfunction Form({ onResult, onClear }) {\r\n  const [file, setFile] = useState(null);\r\n  const [jobPosition, setJobPosition] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!file) {\r\n      alert(\"Veuillez tÃ©lÃ©charger un fichier PDF.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"cvFile\", file);\r\n    formData.append(\"jobPosition\", jobPosition);\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"https://mywebsiteserver-s92a.onrender.com/upload-cv\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const data = await response.json();\r\n      setResult(data); // Set the result locally\r\n      onResult(data); // Pass the result to the parent component if needed\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'envoi du formulaire :\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatResult = (data) => {\r\n    if (!data || !data.analysis) return null;\r\n\r\n    const lines = data.analysis.split(\"\\n\");\r\n    return lines.map((line, index) => {\r\n      if (line.startsWith(\"**\") && line.endsWith(\"**\")) {\r\n        const title = line.slice(2, -2).trim();\r\n        return (\r\n          <h2 key={index} className=\"result-title\">\r\n            {title}\r\n          </h2>\r\n        );\r\n      }\r\n      return (\r\n        <p key={index} className=\"result-paragraph\">\r\n          {line}\r\n        </p>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>VÃ©rificateur et Ã‰valuateur de CV par IA Gratuit</h1>\r\n      {result ? (\r\n        <div className=\"result-container\">\r\n          <h1>RÃ©sultat de l'analyse :</h1>\r\n          <div>{formatResult(result)}</div>\r\n        </div>\r\n      ) : (\r\n        <form onSubmit={handleSubmit} className=\"form\">\r\n          <div className=\"upload-box\">\r\n            <label htmlFor=\"fileInput\">\r\n              {file ? file.name : \"Cliquez pour tÃ©lÃ©charger ou glissez et dÃ©posez votre CV ici\"}\r\n              <br />\r\n              <span>{file ? \"\" : \"PDF ou DOCX\"}</span>\r\n            </label>\r\n            <input\r\n              id=\"fileInput\"\r\n              type=\"file\"\r\n              accept=\".pdf,.docx\" \r\n              onChange={handleFileChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"job-box\">\r\n            <label htmlFor=\"jobPosition\" className=\"form-label\">\r\n              Poste recherchÃ© (optionnel) :\r\n            </label>\r\n            <input\r\n              id=\"jobPosition\"\r\n              type=\"text\"\r\n              placeholder=\"Entrez le poste recherchÃ© (ex : DÃ©veloppeur Web)\"\r\n              value={jobPosition}\r\n              onChange={(e) => setJobPosition(e.target.value)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"analyze-btn\" disabled={loading}>\r\n            {loading ? <Loader/> : \"Analysez Mon CV\"}\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;","import React, { useState, useEffect } from 'react'; \r\nimport boxShadowSetter from \"../ressources/projectRessources\";\r\nimport LegalRAG from \"../components/LegalRAG\";\r\nimport Test from \"../components/Agent\";\r\nimport Form from \"../components/Form\";\r\nimport \"../style/project.css\";\r\nimport legalImage from \"../image/JuridiqueIA.webp\";\r\nimport promptImage from \"../image/promptGen.webp\";\r\nimport cvImage from \"../image/CVanalyzer.webp\";\r\n\r\n\r\nconst Card = ({ shadowStyles, content, imageSrc, isExpanded, isHidden, onReturn }) => {\r\n  return (\r\n    <div\r\n      className={`card ${isExpanded ? 'expanded' : ''} ${isHidden ? 'hidden' : ''}`}\r\n      style={isExpanded ? { boxShadow: shadowStyles, transition: 'all 0.5s ease-in-out', maxWidth: '80vw' } : { boxShadow: shadowStyles }}\r\n    >\r\n      {isExpanded && (\r\n        <button className=\"goBack-btn\" onClick={onReturn}>\r\n          Retour\r\n        </button>\r\n      )}\r\n      {imageSrc && !isExpanded && <img src={imageSrc} alt=\"card visual\" className=\"card-image\" />}\r\n      {content(isExpanded)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Cards = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [expandedCard, setExpandedCard] = useState(null);\r\n  const [cvResult, setCVResult] = useState(null);\r\n\r\n  const handleResize = () => {\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n\r\n  const handleReturn = () => {\r\n    if (cvResult) setCVResult(null);\r\n    setExpandedCard(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const initialShadows = boxShadowSetter(windowWidth);\r\n\r\n  const cardContents = [\r\n    {\r\n      image: legalImage,\r\n      content: (isExpanded) => (\r\n        isExpanded ? (\r\n          <LegalRAG />\r\n        ) : (\r\n          <div className=\"card-intro\">\r\n            <h2>Assistant Juridique</h2>\r\n            <p>Posez vos questions juridiques et obtenez des rÃ©ponses prÃ©cises.</p>\r\n            <button onClick={() => setExpandedCard(0)}>Utiliser</button>\r\n          </div>\r\n        )\r\n      ),\r\n    },\r\n    {\r\n      image: promptImage,\r\n      content: (isExpanded) => (\r\n        isExpanded ? (\r\n          <Test />\r\n        ) : (\r\n          <div className=\"card-intro\">\r\n            <h2>CrÃ©ateur de prompt</h2>\r\n            <p>Cette application vous permet de gÃ©nÃ©rer un prompt via une idÃ©e</p>\r\n            <button onClick={() => setExpandedCard(1)}>Utiliser</button>\r\n          </div>\r\n        )\r\n      ),\r\n    },\r\n    {\r\n      image: cvImage,\r\n      content: (isExpanded) => (\r\n        isExpanded ? (\r\n          <Form onResult={(data) => setCVResult(data)} onClear={handleReturn} />\r\n        ) : (\r\n          <div className=\"card-intro\">\r\n            <h2>Analyseur de CV</h2>\r\n            <p>Analysez votre CV et obtenez des conseils personnalisÃ©s.</p>\r\n            <button onClick={() => setExpandedCard(2)}>Utiliser</button>\r\n          </div>\r\n        )\r\n      ),\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className='cards'>\r\n      {cardContents.map((card, index) => (\r\n        <Card\r\n          key={index}\r\n          shadowStyles={initialShadows[index]}\r\n          content={card.content}\r\n          imageSrc={card.image}\r\n          isExpanded={expandedCard === index}\r\n          isHidden={expandedCard !== null && expandedCard !== index}\r\n          onReturn={() => setExpandedCard(null)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Project = () => {\r\n  return (\r\n    <section id='project' className=\"libContent\">\r\n      <h1 className='textLib'>\r\n        <span style={{ color: 'aquamarine' }}>III. </span>Applications\r\n      </h1>\r\n      <Cards />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"names":["width","Loader","dots","Array","from","length","_jsx","className","children","map","_","index","_ref","onClear","question","setQuestion","useState","answer","setAnswer","loading","setLoading","useEffect","_jsxs","onSubmit","async","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","alert","htmlFor","id","type","placeholder","value","onChange","e","target","required","disabled","text","split","line","parts","part","idx","startsWith","endsWith","title","slice","trim","boldText","onResult","file","setFile","jobPosition","setJobPosition","result","setResult","analysis","formatResult","formData","FormData","append","name","accept","selectedFile","files","Card","shadowStyles","content","imageSrc","isExpanded","isHidden","onReturn","concat","style","boxShadow","transition","maxWidth","onClick","src","alt","Cards","windowWidth","setWindowWidth","window","innerWidth","expandedCard","setExpandedCard","cvResult","setCVResult","handleResize","handleReturn","addEventListener","removeEventListener","initialShadows","boxShadowSetter","cardContents","image","legalImage","LegalRAG","promptImage","Test","cvImage","Form","card","Project","color"],"sourceRoot":""}