{"version":3,"file":"static/js/616.2dfc145a.chunk.js","mappings":"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","sources":["ressources/projectRessources.js","components/LegalRAG.js","components/Agent.js","components/Form.js","sections/project.js"],"sourcesContent":["const boxShadowSetter = (width) => {\r\n    const initialShadows = width <= 1080 ?  \r\n    [`rgb(91 75 210 / 40%) 0px 5px, \r\n  rgb(75 140 210 / 30%) 0px 10px, \r\n  rgb(75 203 210 / 20%) 0px 15px, \r\n  rgb(75 203 210 / 10%) 0px 20px, \r\n  rgb(75 210 186 / 5%) 0px 25px`,\r\n      `rgb(91 75 210 / 40%) 0px 5px, \r\n  rgb(75 140 210 / 30%) 0px 10px, \r\n  rgb(75 203 210 / 20%) 0px 15px, \r\n  rgb(75 203 210 / 10%) 0px 20px, \r\n  rgb(75 210 186 / 5%) 0px 25px`,\r\n      `rgb(91 75 210 / 40%) 0px 5px, \r\n  rgb(75 140 210 / 30%) 0px 10px, \r\n  rgb(75 203 210 / 20%) 0px 15px, \r\n  rgb(75 203 210 / 10%) 0px 20px, \r\n  rgb(75 210 186 / 5%) 0px 25px`]\r\n  :\r\n  [\r\n    `rgb(91 75 210 / 40%) -5px 5px, \r\n  rgb(75 140 210 / 30%) -10px 10px, \r\n  rgb(75 203 210 / 20%) -15px 15px, \r\n  rgb(75 203 210 / 10%) -20px 20px, \r\n  rgb(75 210 186 / 5%) -25px 25px`,\r\n    `rgb(91 75 210 / 40%) 0px 5px, \r\n  rgb(75 140 210 / 30%) 0px 10px, \r\n  rgb(75 203 210 / 20%) 0px 15px, \r\n  rgb(75 203 210 / 10%) 0px 20px, \r\n  rgb(75 210 186 / 5%) 0px 25px`,\r\n    `rgb(91 75 210 / 40%) 5px 5px, \r\n  rgb(75 140 210 / 30%) 10px 10px, \r\n  rgb(75 203 210 / 20%) 15px 15px, \r\n  rgb(75 203 210 / 10%) 20px 20px, \r\n  rgb(75 210 186 / 5%) 25px 25px`\r\n  ];\r\n  return initialShadows;\r\n}\r\n\r\nexport default boxShadowSetter;","import React, { useState, useEffect } from \"react\";\r\nimport \"./LegalRAG.css\";\r\n\r\nfunction LegalRAG({ onClear }) {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [loading, setLoading] = useState(false); // État pour le chargement\r\n\r\n  const handleSearch = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!question) {\r\n      alert(\"Veuillez entrer une question ou une recherche.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // Démarrer le chargement\r\n\r\n    try {\r\n      const response = await fetch(\"https://mywebsiteserver-s92a.onrender.com/test-query\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          question,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setAnswer(data.answer);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'envoi de la requête :\", error);\r\n      setAnswer(\"Une erreur est survenue. Veuillez réessayer.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (onClear) {\r\n      onClear(() => setAnswer(\"\")); // Réinitialise le contenu lorsqu'onReturn est déclenché\r\n    }\r\n  }, [onClear]);\r\n\r\n  const formatAnswer = (text) => {\r\n    console.log(text)\r\n    const lines = text.split(\"\\n\");\r\n    return lines.map((line, index) => {\r\n      const parts = line.split(/(\\*\\*.*?\\*\\*|#.*?#)/);\r\n      return (\r\n        <p key={index} className=\"legal-paragraph\">\r\n          {parts.map((part, idx) => {\r\n            if (part.startsWith(\"**\") && part.endsWith(\"**\")) {\r\n              const title = part.slice(2, -2).trim();\r\n              return (\r\n                <h2 key={idx} className=\"legal-title\">\r\n                  {title}\r\n                </h2>\r\n              );\r\n            } else if (part.startsWith(\"#\") && part.endsWith(\"#\")) {\r\n              const boldText = part.slice(1, -1).trim();\r\n              return (\r\n                <strong key={idx} className=\"legal-bold\">\r\n                  {boldText}\r\n                </strong>\r\n              );\r\n            }\r\n            return part;\r\n          })}\r\n        </p>\r\n      );\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>Assistant Juridique par IA</h1>\r\n      <form onSubmit={handleSearch} className=\"form\">\r\n        <label htmlFor=\"questionInput\" className=\"form-label\">\r\n          Posez votre question :\r\n        </label>\r\n        <input\r\n          id=\"questionInput\"\r\n          type=\"text\"\r\n          placeholder=\"Ex : Quelle est la différence entre homicide et meurtre ?\"\r\n          value={question}\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"analyze-btn\" disabled={loading}>\r\n          {loading ? \"Recherche en cours...\" : \"Rechercher\"}\r\n        </button>\r\n      </form>\r\n      {answer && (\r\n        <div className=\"legal-rag-result\">\r\n          <h2>Résultat :</h2>\r\n          {formatAnswer(answer)}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LegalRAG;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./LegalRAG.css\";\r\n\r\nfunction Test({ onClear }) {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [loading, setLoading] = useState(false); // État pour le chargement\r\n\r\n  const handleSearch = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!question) {\r\n      alert(\"Veuillez entrer une question ou une recherche.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // Démarrer le chargement\r\n\r\n    try {\r\n      const response = await fetch(\"https://mywebsiteserver-s92a.onrender.com/test-query\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          question,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setAnswer(data.answer);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'envoi de la requête :\", error);\r\n      setAnswer(\"Une erreur est survenue. Veuillez réessayer.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (onClear) {\r\n      onClear(() => setAnswer(\"\")); // Réinitialise le contenu lorsqu'onReturn est déclenché\r\n    }\r\n  }, [onClear]);\r\n\r\n  const formatAnswer = (text) => {\r\n    console.log(text)\r\n    const lines = text.split(\"\\n\");\r\n    return lines.map((line, index) => {\r\n      const parts = line.split(/(\\*\\*.*?\\*\\*|#.*?#)/);\r\n      return (\r\n        <p key={index} className=\"legal-paragraph\">\r\n          {parts.map((part, idx) => {\r\n            if (part.startsWith(\"**\") && part.endsWith(\"**\")) {\r\n              const title = part.slice(2, -2).trim();\r\n              return (\r\n                <h2 key={idx} className=\"legal-title\">\r\n                  {title}\r\n                </h2>\r\n              );\r\n            } else if (part.startsWith(\"#\") && part.endsWith(\"#\")) {\r\n              const boldText = part.slice(1, -1).trim();\r\n              return (\r\n                <strong key={idx} className=\"legal-bold\">\r\n                  {boldText}\r\n                </strong>\r\n              );\r\n            }\r\n            return part;\r\n          })}\r\n        </p>\r\n      );\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>Générateur de prompt</h1>\r\n      <form onSubmit={handleSearch} className=\"form\">\r\n        <label htmlFor=\"questionInput\" className=\"form-label\">\r\n          Posez votre question :\r\n        </label>\r\n        <input\r\n          id=\"questionInput\"\r\n          type=\"text\"\r\n          placeholder=\"Ex : Quelle est la différence entre homicide et meurtre ?\"\r\n          value={question}\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"analyze-btn\" disabled={loading}>\r\n          {loading ? \"Recherche en cours...\" : \"Rechercher\"}\r\n        </button>\r\n      </form>\r\n      {answer && (\r\n        <div className=\"legal-rag-result\">\r\n          <h2>Résultat :</h2>\r\n          {formatAnswer(answer)}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","import React, { useState } from \"react\";\r\nimport \"./Form.css\";\r\n\r\nfunction Form({ onResult, onClear }) {\r\n  const [file, setFile] = useState(null);\r\n  const [jobPosition, setJobPosition] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!file) {\r\n      alert(\"Veuillez télécharger un fichier PDF.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"cvFile\", file);\r\n    formData.append(\"jobPosition\", jobPosition);\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"https://mywebsiteserver-s92a.onrender.com/upload-cv\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const data = await response.json();\r\n      setResult(data); // Set the result locally\r\n      onResult(data); // Pass the result to the parent component if needed\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'envoi du formulaire :\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatResult = (data) => {\r\n    if (!data || !data.analysis) return null;\r\n\r\n    const lines = data.analysis.split(\"\\n\");\r\n    return lines.map((line, index) => {\r\n      if (line.startsWith(\"**\") && line.endsWith(\"**\")) {\r\n        const title = line.slice(2, -2).trim();\r\n        return (\r\n          <h2 key={index} className=\"result-title\">\r\n            {title}\r\n          </h2>\r\n        );\r\n      }\r\n      return (\r\n        <p key={index} className=\"result-paragraph\">\r\n          {line}\r\n        </p>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>Vérificateur et Évaluateur de CV par IA Gratuit</h1>\r\n      {result ? (\r\n        <div className=\"result-container\">\r\n          <h1>Résultat de l'analyse :</h1>\r\n          <div>{formatResult(result)}</div>\r\n        </div>\r\n      ) : (\r\n        <form onSubmit={handleSubmit} className=\"form\">\r\n          <div className=\"upload-box\">\r\n            <label htmlFor=\"fileInput\">\r\n              {file ? file.name : \"Cliquez pour télécharger ou glissez et déposez votre CV ici\"}\r\n              <br />\r\n              <span>{file ? \"\" : \"PDF ou DOCX\"}</span>\r\n            </label>\r\n            <input\r\n              id=\"fileInput\"\r\n              type=\"file\"\r\n              accept=\".pdf,.docx\" \r\n              onChange={handleFileChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"job-box\">\r\n            <label htmlFor=\"jobPosition\" className=\"form-label\">\r\n              Poste recherché (optionnel) :\r\n            </label>\r\n            <input\r\n              id=\"jobPosition\"\r\n              type=\"text\"\r\n              placeholder=\"Entrez le poste recherché (ex : Développeur Web)\"\r\n              value={jobPosition}\r\n              onChange={(e) => setJobPosition(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"analyze-btn\" disabled={loading}>\r\n            {loading ? \"Analyse en cours...\" : \"Analysez Mon CV\"}\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;","import React, { useState, useEffect } from 'react';\r\nimport boxShadowSetter from \"../ressources/projectRessources\";\r\nimport LegalRAG from \"../components/LegalRAG\";\r\nimport Test from \"../components/Agent\";\r\nimport Form from \"../components/Form\";\r\nimport \"../style/project.css\";\r\n\r\nconst Card = ({ shadowStyles, content, onClick, isExpanded, isHidden, onReturn }) => {\r\n  return (\r\n    <div\r\n      className={`card ${isExpanded ? 'expanded' : ''} ${isHidden ? 'hidden' : ''}`}\r\n      style={isExpanded ? { boxShadow: shadowStyles, width: '100%', maxWidth: '80vw' } : { boxShadow: shadowStyles }}\r\n    >\r\n      {isExpanded && (\r\n        <button className=\"goBack-btn\" onClick={onReturn}>\r\n          Retour\r\n        </button>\r\n      )}\r\n      {content(isExpanded)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Cards = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [expandedCard, setExpandedCard] = useState(null);\r\n  const [cvResult, setCVResult] = useState(null);\r\n\r\n  const handleResize = () => {\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n\r\n  const handleReturn = () => {\r\n    if (cvResult) setCVResult(null);\r\n    setExpandedCard(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const initialShadows = boxShadowSetter(windowWidth);\r\n\r\n  const cardContents = [\r\n    (isExpanded) => (\r\n      isExpanded ? (\r\n        <LegalRAG />\r\n      ) : (\r\n        <div className=\"card-intro\">\r\n          <h2>Assistant Juridique</h2>\r\n          <p>Posez vos questions juridiques et obtenez des réponses précises.</p>\r\n          <button onClick={() => setExpandedCard(0)}>Utiliser</button>\r\n        </div>\r\n      )\r\n    ),\r\n    (isExpanded) => (\r\n      isExpanded ? (\r\n        <Test/>\r\n      ) : (\r\n        <div className=\"card-intro\">\r\n          <h2>Créateur de prompt</h2>\r\n          <p>Cette application vous permet de générer un prompt via une idée</p>\r\n          <button onClick={() => setExpandedCard(1)}>Utiliser</button>\r\n        </div>\r\n      )\r\n    ),\r\n    (isExpanded) => (\r\n      isExpanded ? (\r\n        <Form onResult={(data) => setCVResult(data)} onClear={handleReturn} />\r\n      ) : (\r\n        <div className=\"card-intro\">\r\n          <h2>Analyseur de CV</h2>\r\n          <p>Analysez votre CV et obtenez des conseils personnalisés.</p>\r\n          <button onClick={() => setExpandedCard(2)}>Utiliser</button>\r\n        </div>\r\n      )\r\n    )\r\n  ];\r\n\r\n  return (\r\n    <div className='cards'>\r\n      {cardContents.map((content, index) => (\r\n        <Card\r\n          key={index}\r\n          shadowStyles={initialShadows[index]}\r\n          content={content}\r\n          onClick={() => setExpandedCard(index)}\r\n          onReturn={handleReturn}\r\n          isExpanded={expandedCard === index}\r\n          isHidden={expandedCard !== null && expandedCard !== index}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Project = () => {\r\n  return (\r\n    <section id='project' className=\"libContent\">\r\n      <h1 className='textLib'>\r\n        <span style={{ color: 'aquamarine' }}>III. </span>Applications\r\n      </h1>\r\n      <Cards />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"names":["width","_ref","onClear","question","setQuestion","useState","answer","setAnswer","loading","setLoading","useEffect","_jsxs","className","children","_jsx","onSubmit","async","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","alert","htmlFor","id","type","placeholder","value","onChange","e","target","required","disabled","text","log","split","map","line","index","parts","part","idx","startsWith","endsWith","title","slice","trim","boldText","formatAnswer","onResult","file","setFile","jobPosition","setJobPosition","result","setResult","analysis","formatResult","formData","FormData","append","name","accept","selectedFile","files","Card","shadowStyles","content","onClick","isExpanded","isHidden","onReturn","concat","style","boxShadow","maxWidth","Cards","windowWidth","setWindowWidth","window","innerWidth","expandedCard","setExpandedCard","cvResult","setCVResult","handleResize","handleReturn","addEventListener","removeEventListener","initialShadows","boxShadowSetter","cardContents","LegalRAG","Test","Form","Project","color"],"sourceRoot":""}