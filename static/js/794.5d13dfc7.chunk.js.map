{"version":3,"file":"static/js/794.5d13dfc7.chunk.js","mappings":"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","sources":["ressources/workRessource.js","sections/work.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport lottie from 'lottie-web';\r\nimport \"../style/work.css\"\r\n\r\n\r\nexport const workInfos = [\r\n  {\r\n    companyName: 'Extia',\r\n    companyLink: 'https://www.extia-group.com/',\r\n    position: 'Consultant developer full stack',\r\n    dateRange: 'Jan 2021 – Apr 2022',\r\n    tasks: [\r\n      'Database Administration - MySQL',\r\n      'Back-End Management - .Net',\r\n      'Front-End Design and Implementation - ReactJS / SCSS',\r\n      'Development of REST APIs for Back-End Integration - JavaScript'\r\n    ]\r\n  },\r\n  {\r\n    companyName: 'Infopro Digital',\r\n    companyLink: 'https://www.infopro-digital.com/',\r\n    position: 'Software Architect & Developer',\r\n    dateRange: 'Mar 2019 – May 2021',\r\n    tasks: [\r\n      'Front-End Implementation - JavaScript / HTML / CSS',\r\n      'Ensuring GDPR Compliance - JavaScript',\r\n      'Ensured scalability and performance of web applications',\r\n      'Modification of Personal Data Usage - .Net'\r\n    ]\r\n  },\r\n  {\r\n    companyName: 'Event Maker',\r\n    companyLink: 'https://www.eventmaker.com/en/',\r\n    position: 'Developer',\r\n    dateRange: 'Jun 2018 – Dec 2019',\r\n    tasks: [\r\n      'Improvement of an event management platform - ReactJS',\r\n      'Implementation and creation of new components for the platform - ReactJS',\r\n      'Development of new functionalities and improvements - ReactJS / TypeScript'\r\n    ]\r\n  },\r\n  {\r\n    companyName: 'Société Générale',\r\n    companyLink: 'https://particuliers.sg.fr/',\r\n    position: 'Head developer',\r\n    dateRange: '2017 – 2018',\r\n    tasks: [\r\n      'Development of an incident management application - J2EE',\r\n      'Database Management - MySQL',\r\n      'Creation of the interface and deployment of the application within the company'\r\n    ]\r\n  },\r\n];\r\n\r\n\r\nexport const LottieAnimation = ({ animationData }) => {\r\n  const animationContainer = useRef(null);\r\n  const animationInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    animationInstance.current = lottie.loadAnimation({\r\n      container: animationContainer.current,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: true,\r\n      animationData: animationData,\r\n    });\r\n\r\n    animationInstance.current.setSpeed(0.5);\r\n\r\n    const handleEnterFrame = () => {\r\n      if (animationInstance.current.playDirection === 1) {\r\n        if (animationInstance.current.currentFrame >= animationInstance.current.totalFrames - 32) {\r\n          animationInstance.current.setDirection(-1);\r\n        }\r\n      } else {\r\n        if (animationInstance.current.currentFrame <= 53) {\r\n          animationInstance.current.setDirection(1);\r\n        }\r\n      }\r\n    };\r\n\r\n    animationInstance.current.addEventListener('enterFrame', handleEnterFrame);\r\n    return () => {\r\n      animationInstance.current.removeEventListener('enterFrame', handleEnterFrame);\r\n      animationInstance.current.destroy();\r\n    };\r\n  }, [animationData]);\r\n\r\n  return <div ref={animationContainer} className='reactAnim'></div>;\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { workInfos, LottieAnimation } from '../ressources/workRessource';\r\nimport animationData from \"../image/reactAnimated.json\";\r\nimport \"../style/work.css\";\r\n\r\nconst createTextLink = (url, className, text) => (\r\n  <a href={url} className={className} target=\"_blank\" rel=\"noopener noreferrer\">\r\n    {text}\r\n  </a>\r\n);\r\n\r\nconst WorkInfoFace = ({ faceClass, children }) => {\r\n  const faceClasses = {\r\n    \"show-front\": 'cube__face--front',\r\n    \"show-right\": 'cube__face--right',\r\n    \"show-bottom\": 'cube__face--bottom',\r\n    \"show-left\": 'cube__face--left',\r\n  };\r\n\r\n  return <div className={`cube__face ${faceClasses[faceClass] || 'cube__face--front'}`}>{children}</div>;\r\n};\r\n\r\nconst renderWorkInfo = (info) => {\r\n  if (!info) return null;\r\n  return (\r\n    <>\r\n      <h2 className='WorkInfoContentTitle'>{info.position} @{createTextLink(info.companyLink, 'textLinkUnderline', info.companyName)}</h2>\r\n      <p className=\"experience-date\">{info.dateRange}</p>\r\n      <ul className=\"experience-list\">\r\n        {info.tasks.map((task, index) => (\r\n          <li key={index}>{task}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst WorkInfoContent = () => (\r\n  <div className=\"MainWorkInfoContent cube cube--rotate\">\r\n    {workInfos.map((info, index) => (\r\n      <WorkInfoFace key={index} faceClass={`show-${['front', 'right', 'bottom', 'left'][index]}`}>\r\n        {renderWorkInfo(info)}\r\n      </WorkInfoFace>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst WorkInfo = ({ selectedButton }) => {\r\n  const [rotationClass, setRotationClass] = useState('show-front');\r\n\r\n  useEffect(() => {\r\n    setRotationClass(['show-front', 'show-right', 'show-bottom', 'show-left'][selectedButton] || 'show-front');\r\n  }, [selectedButton]);\r\n\r\n  return (\r\n    <div className={`cube ${rotationClass} cube--rotate`}>\r\n      <WorkInfoContent />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WorkList = ({ onSelect }) => {\r\n  const [selectedButton, setSelectedButton] = useState(0);\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setWindowWidth(window.innerWidth);\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const handleButtonClick = (index) => {\r\n    setSelectedButton(index);\r\n    onSelect(index);\r\n  };\r\n\r\n  const cursorStyle = windowWidth <= 405\r\n    ? { transform: `translateX(calc(${selectedButton} * ${(windowWidth * 0.92) * 0.24997}px))` }\r\n    : windowWidth <= 1080\r\n      ? { transform: `translateX(calc(${selectedButton} * 93.45px))` }\r\n      : { transform: `translateY(calc(${selectedButton} * 42px))` };\r\n\r\n  return (\r\n    <div role=\"tablist\" aria-label=\"Job tabs\" className=\"workList\">\r\n      <div className='centerCursor'>\r\n        {workInfos.map((info, index) => (\r\n          <button\r\n            key={index}\r\n            id={`tab-${index}`}\r\n            role=\"tab\"\r\n            tabIndex={selectedButton === index ? 0 : -1}\r\n            aria-selected={selectedButton === index}\r\n            aria-controls={`panel-${index}`}\r\n            className={selectedButton === index ? 'selected' : 'unselected'}\r\n            onClick={() => handleButtonClick(index)}\r\n          >\r\n            {info.companyName}\r\n          </button>\r\n        ))}\r\n        <div className=\"cursorList\" style={cursorStyle}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Work = () => {\r\n  const [selectedButton, setSelectedButton] = useState(0);\r\n\r\n  return (\r\n    <section id='Work' className=\"workContent\">\r\n      <h1 className='titleWork'>\r\n        <span style={{ color: 'aquamarine' }}>II. </span>Where I've worked\r\n      </h1>\r\n      <div className='workListContent'>\r\n        <WorkList onSelect={setSelectedButton} />\r\n        <WorkInfo selectedButton={selectedButton} />\r\n        <LottieAnimation animationData={animationData} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Work;"],"names":["workInfos","companyName","companyLink","position","dateRange","tasks","LottieAnimation","_ref","animationData","animationContainer","useRef","animationInstance","useEffect","current","lottie","container","renderer","loop","autoplay","setSpeed","handleEnterFrame","playDirection","currentFrame","totalFrames","setDirection","addEventListener","removeEventListener","destroy","_jsx","ref","className","WorkInfoFace","faceClass","children","concat","renderWorkInfo","info","_jsxs","_Fragment","url","text","href","target","rel","map","task","index","createTextLink","WorkInfoContent","WorkInfo","_ref2","selectedButton","rotationClass","setRotationClass","useState","WorkList","_ref3","onSelect","setSelectedButton","windowWidth","setWindowWidth","window","innerWidth","handleResize","cursorStyle","transform","role","id","tabIndex","onClick","handleButtonClick","style","Work","color"],"sourceRoot":""}